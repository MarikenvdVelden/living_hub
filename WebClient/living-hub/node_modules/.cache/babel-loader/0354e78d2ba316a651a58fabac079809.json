{"ast":null,"code":"var _jsxFileName = \"/Users/farzam/Projects/VU Coding/Living Hub/living-hub/src/components/Records.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport history from \"../history\";\nimport { createSession } from \"../actions\";\nimport newElasticConnection from \"../apis/Elastic\";\nimport { Button, Card, Label } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultLoginCredentials = {\n  host: \"http://127.0.0.1:5000\",\n  email: \"admin\",\n  password: \"admin\"\n};\n\nclass Records extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitForm = async () => {\n      this.setState({\n        loginStatus: \"waiting\"\n      });\n      newElasticConnection(this.state.host, this.state.email, this.state.password).then(elasticSession => {\n        this.props.createSession(elasticSession);\n        this.setState({\n          loginStatus: \"success\"\n        });\n        history.push(this.props.items[0].path);\n        console.log(this.state.loginStatus);\n      }).catch(e => {\n        this.setState({\n          loginStatus: \"error\"\n        });\n        console.log(this.state.loginStatus);\n      });\n    };\n\n    this.state = {\n      host: defaultLoginCredentials.host ? defaultLoginCredentials.host : null,\n      email: defaultLoginCredentials.email ? defaultLoginCredentials.email : null,\n      password: defaultLoginCredentials.password ? defaultLoginCredentials.password : null,\n      loginStatus: \"idle\"\n    };\n  }\n\n  createCard() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"file alternate outline icon large right floated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Steve Sanders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          children: \"Friends of Elliot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n          children: [\"Steve wants to add you to the group \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"best friends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: [this.createLabels(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui two buttons\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            basic: true,\n            color: \"green\",\n            children: \"Approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            basic: true,\n            color: \"red\",\n            onClick: this.submitForm,\n            children: \"Decline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n  createLabels() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        as: \"a\",\n        tag: true,\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        as: \"a\",\n        color: \"red\",\n        tag: true,\n        children: \"Upcoming\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        as: \"a\",\n        color: \"teal\",\n        tag: true,\n        children: \"Featured\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      stackable: true,\n      itemsPerRow: 3,\n      children: this.createCard()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    session: state.session,\n    index: state.index,\n    indices: state.indices\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createSession\n})(Records);","map":{"version":3,"sources":["/Users/farzam/Projects/VU Coding/Living Hub/living-hub/src/components/Records.js"],"names":["React","connect","Link","history","createSession","newElasticConnection","Button","Card","Label","defaultLoginCredentials","host","email","password","Records","Component","constructor","props","submitForm","setState","loginStatus","state","then","elasticSession","push","items","path","console","log","catch","e","createCard","createLabels","render","mapStateToProps","session","index","indices"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport history from \"../history\";\n\nimport { createSession } from \"../actions\";\nimport newElasticConnection from \"../apis/Elastic\";\n\nimport { Button, Card, Label } from \"semantic-ui-react\";\n\nconst defaultLoginCredentials = {\n  host: \"http://127.0.0.1:5000\",\n  email: \"admin\",\n  password: \"admin\",\n};\n\nclass Records extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      host: defaultLoginCredentials.host ? defaultLoginCredentials.host : null,\n      email: defaultLoginCredentials.email\n        ? defaultLoginCredentials.email\n        : null,\n      password: defaultLoginCredentials.password\n        ? defaultLoginCredentials.password\n        : null,\n      loginStatus: \"idle\",\n    };\n  }\n\n  submitForm = async () => {\n    this.setState({\n      loginStatus: \"waiting\",\n    });\n\n    newElasticConnection(this.state.host, this.state.email, this.state.password)\n      .then((elasticSession) => {\n        this.props.createSession(elasticSession);\n        this.setState({\n          loginStatus: \"success\",\n        });\n        history.push(this.props.items[0].path);\n        console.log(this.state.loginStatus);\n      })\n      .catch((e) => {\n        this.setState({\n          loginStatus: \"error\",\n        });\n        console.log(this.state.loginStatus);\n      });\n  };\n\n  createCard() {\n    return (\n      <Card>\n        <Card.Content>\n          <i class=\"file alternate outline icon large right floated\" />\n          <Card.Header>Steve Sanders</Card.Header>\n          <Card.Meta>Friends of Elliot</Card.Meta>\n          <Card.Description>\n            Steve wants to add you to the group <strong>best friends</strong>\n          </Card.Description>\n        </Card.Content>\n\n        <Card.Content extra>\n          {this.createLabels()}\n          <br />\n          <div className=\"ui two buttons\">\n            <Button basic color=\"green\">\n              Approve\n            </Button>\n            <Button basic color=\"red\" onClick={this.submitForm}>\n              Decline\n            </Button>\n          </div>\n        </Card.Content>\n      </Card>\n    );\n  }\n\n  createLabels() {\n    return (\n      <div>\n        <Label as=\"a\" tag>\n          New\n        </Label>\n        <Label as=\"a\" color=\"red\" tag>\n          Upcoming\n        </Label>\n        <Label as=\"a\" color=\"teal\" tag>\n          Featured\n        </Label>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Card.Group stackable itemsPerRow={3}>\n        {this.createCard()}\n      </Card.Group>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    session: state.session,\n    index: state.index,\n    indices: state.indices,\n  };\n};\n\nexport default connect(mapStateToProps, { createSession })(Records);\n"]},"metadata":{},"sourceType":"module"}