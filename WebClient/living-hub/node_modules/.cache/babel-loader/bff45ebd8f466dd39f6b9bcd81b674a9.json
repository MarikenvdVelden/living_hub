{"ast":null,"code":"var _jsxFileName = \"/Users/farzam/Projects/VU Coding/Living Hub/living-hub/src/components/QueryPage.js\";\nimport React from \"react\";\nimport { Grid, Input, Container, Divider } from \"semantic-ui-react\";\nimport Records from \"./Records\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QueryPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.runQuery = () => {\n      this.props.session.postQuery(this.props.index, this.props.queryString, // this.fields,\n      \"\", \"2m\", 100, {}, { ...this.prepareFilters()\n      }).then(res => {\n        this.props.setDocuments(res.data.results);\n      }).catch(e => {\n        console.log(e);\n      });\n      return null;\n    };\n  }\n\n  prepareFilters() {\n    this.setState({\n      queryMethod: \"POST\"\n    });\n    const obj = {};\n    const dateFilter = {\n      range: {}\n    };\n    Object.entries(this.props.filters).map(filter => {\n      if (filter[0] === \"date\") {\n        for (const [rangeIndicator, value] of Object.entries(filter[1])) {\n          if (value === null || value === \"\") {\n            console.log(\"here\");\n            dateFilter.range = _.omit(dateFilter.range, rangeIndicator);\n          } else dateFilter.range[rangeIndicator] = value;\n        }\n\n        obj[\"date\"] = dateFilter;\n      } else {\n        obj[filter[0]] = {\n          value: filter[1]\n        };\n      }\n\n      return obj;\n    });\n    return obj;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 16,\n          children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              fluid: true,\n              size: \"big\",\n              icon: \"search\",\n              placeholder: \"Search...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: /*#__PURE__*/_jsxDEV(Records, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    session: state.session,\n    index: state.index,\n    fields: state.indexFields,\n    filters: state.fieldValues,\n    queryString: state.queryString,\n    documents: state.documents\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDocuments,\n  setQueryString\n})(QueryPage);","map":{"version":3,"sources":["/Users/farzam/Projects/VU Coding/Living Hub/living-hub/src/components/QueryPage.js"],"names":["React","Grid","Input","Container","Divider","Records","QueryPage","Component","runQuery","props","session","postQuery","index","queryString","prepareFilters","then","res","setDocuments","data","results","catch","e","console","log","setState","queryMethod","obj","dateFilter","range","Object","entries","filters","map","filter","rangeIndicator","value","_","omit","render","mapStateToProps","state","fields","indexFields","fieldValues","documents","connect","setQueryString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,EAAiCC,OAAjC,QAAgD,mBAAhD;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SA0BtCC,QA1BsC,GA0B3B,MAAM;AACf,WAAKC,KAAL,CAAWC,OAAX,CACGC,SADH,CAEI,KAAKF,KAAL,CAAWG,KAFf,EAGI,KAAKH,KAAL,CAAWI,WAHf,EAII;AACA,QALJ,EAMI,IANJ,EAOI,GAPJ,EAQI,EARJ,EASI,EAAE,GAAG,KAAKC,cAAL;AAAL,OATJ,EAWGC,IAXH,CAWSC,GAAD,IAAS;AACb,aAAKP,KAAL,CAAWQ,YAAX,CAAwBD,GAAG,CAACE,IAAJ,CAASC,OAAjC;AACD,OAbH,EAcGC,KAdH,CAcUC,CAAD,IAAO;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,OAhBH;AAiBA,aAAO,IAAP;AACD,KA7CqC;AAAA;;AACtCP,EAAAA,cAAc,GAAG;AACf,SAAKU,QAAL,CAAc;AACZC,MAAAA,WAAW,EAAE;AADD,KAAd;AAGA,UAAMC,GAAG,GAAG,EAAZ;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,KAAK,EAAE;AADU,KAAnB;AAGAC,IAAAA,MAAM,CAACC,OAAP,CAAe,KAAKrB,KAAL,CAAWsB,OAA1B,EAAmCC,GAAnC,CAAwCC,MAAD,IAAY;AACjD,UAAIA,MAAM,CAAC,CAAD,CAAN,KAAc,MAAlB,EAA0B;AACxB,aAAK,MAAM,CAACC,cAAD,EAAiBC,KAAjB,CAAX,IAAsCN,MAAM,CAACC,OAAP,CAAeG,MAAM,CAAC,CAAD,CAArB,CAAtC,EAAiE;AAC/D,cAAIE,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,EAAhC,EAAoC;AAClCb,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAI,YAAAA,UAAU,CAACC,KAAX,GAAmBQ,CAAC,CAACC,IAAF,CAAOV,UAAU,CAACC,KAAlB,EAAyBM,cAAzB,CAAnB;AACD,WAHD,MAGOP,UAAU,CAACC,KAAX,CAAiBM,cAAjB,IAAmCC,KAAnC;AACR;;AACDT,QAAAA,GAAG,CAAC,MAAD,CAAH,GAAcC,UAAd;AACD,OARD,MAQO;AACLD,QAAAA,GAAG,CAACO,MAAM,CAAC,CAAD,CAAP,CAAH,GAAiB;AAAEE,UAAAA,KAAK,EAAEF,MAAM,CAAC,CAAD;AAAf,SAAjB;AACD;;AACD,aAAOP,GAAP;AACD,KAbD;AAcA,WAAOA,GAAP;AACD;;AAuBDY,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,SAAD;AAAA,6BACE,QAAC,IAAD;AAAA,+BACE,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,KAAK,EAAE,EAApB;AAAA,kCACE,QAAC,IAAD,CAAM,GAAN;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,KAAlB;AAAwB,cAAA,IAAI,EAAC,QAA7B;AAAsC,cAAA,WAAW,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,IAAD,CAAM,GAAN;AAAA,mCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA/DqC;;AAkExC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACL9B,IAAAA,OAAO,EAAE8B,KAAK,CAAC9B,OADV;AAELE,IAAAA,KAAK,EAAE4B,KAAK,CAAC5B,KAFR;AAGL6B,IAAAA,MAAM,EAAED,KAAK,CAACE,WAHT;AAILX,IAAAA,OAAO,EAAES,KAAK,CAACG,WAJV;AAKL9B,IAAAA,WAAW,EAAE2B,KAAK,CAAC3B,WALd;AAML+B,IAAAA,SAAS,EAAEJ,KAAK,CAACI;AANZ,GAAP;AAQD,CATD;;AAWA,eAAeC,OAAO,CAACN,eAAD,EAAkB;AAAEtB,EAAAA,YAAF;AAAgB6B,EAAAA;AAAhB,CAAlB,CAAP,CACbxC,SADa,CAAf","sourcesContent":["import React from \"react\";\n\nimport { Grid, Input, Container, Divider } from \"semantic-ui-react\";\nimport Records from \"./Records\";\n\nclass QueryPage extends React.Component {\n  prepareFilters() {\n    this.setState({\n      queryMethod: \"POST\",\n    });\n    const obj = {};\n    const dateFilter = {\n      range: {},\n    };\n    Object.entries(this.props.filters).map((filter) => {\n      if (filter[0] === \"date\") {\n        for (const [rangeIndicator, value] of Object.entries(filter[1])) {\n          if (value === null || value === \"\") {\n            console.log(\"here\");\n            dateFilter.range = _.omit(dateFilter.range, rangeIndicator);\n          } else dateFilter.range[rangeIndicator] = value;\n        }\n        obj[\"date\"] = dateFilter;\n      } else {\n        obj[filter[0]] = { value: filter[1] };\n      }\n      return obj;\n    });\n    return obj;\n  }\n\n  runQuery = () => {\n    this.props.session\n      .postQuery(\n        this.props.index,\n        this.props.queryString,\n        // this.fields,\n        \"\",\n        \"2m\",\n        100,\n        {},\n        { ...this.prepareFilters() }\n      )\n      .then((res) => {\n        this.props.setDocuments(res.data.results);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    return null;\n  };\n\n  render() {\n    return (\n      <Container>\n        <Grid>\n          <Grid.Column width={16}>\n            <Grid.Row>\n              <Input fluid size=\"big\" icon=\"search\" placeholder=\"Search...\" />\n            </Grid.Row>\n            <Divider />\n            <Grid.Row>\n              <Records />\n            </Grid.Row>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    session: state.session,\n    index: state.index,\n    fields: state.indexFields,\n    filters: state.fieldValues,\n    queryString: state.queryString,\n    documents: state.documents,\n  };\n};\n\nexport default connect(mapStateToProps, { setDocuments, setQueryString })(\n  QueryPage\n);\n"]},"metadata":{},"sourceType":"module"}