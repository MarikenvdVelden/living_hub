{"ast":null,"code":"var _jsxFileName = \"/Users/farzam/Projects/VU Coding/Living Hub/living-hub/src/components/QueryPage.js\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { connect } from \"react-redux\";\nimport { setDocuments, setQueryString } from \"../actions\";\nimport FilterForms from \"./FilterForms\";\nimport { Grid, Input, Container, Divider, Segment, Button, Form, Icon } from \"semantic-ui-react\";\nimport Records from \"./Records\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QueryPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.runQuery = () => {\n      this.props.session.postQuery(this.props.index, this.props.queryString, // this.fields,\n      \"\", \"2m\", 50, {}, { ...this.prepareFilters()\n      }).then(res => {\n        this.props.setDocuments(res.data.results);\n      }).catch(e => {\n        console.log(e);\n      });\n      return null;\n    };\n\n    this.state = {\n      queryMethod: \"POST\",\n      accordionActive: false\n    };\n    this.fields = Object.keys(this.props.fields);\n  }\n\n  prepareFilters() {\n    this.setState({\n      queryMethod: \"POST\"\n    });\n    const obj = {};\n    const dateFilter = {\n      range: {}\n    };\n    Object.entries(this.props.filters).map(filter => {\n      if (filter[0] === \"date\") {\n        for (const [rangeIndicator, value] of Object.entries(filter[1])) {\n          if (value === null || value === \"\") {\n            console.log(\"here\");\n            dateFilter.range = _.omit(dateFilter.range, rangeIndicator);\n          } else dateFilter.range[rangeIndicator] = value;\n        }\n\n        obj[\"date\"] = dateFilter;\n      } else {\n        obj[filter[0]] = {\n          value: filter[1]\n        };\n      }\n\n      return obj;\n    });\n    return obj;\n  }\n\n  renderQueryWindow() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n          width: 16,\n          value: this.props.queryString ? this.props.queryString : \"\",\n          minRows: 1,\n          placeholder: \"Query...\",\n          onChange: e => this.props.setQueryString(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: this.renderFilters()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Button.Group, {\n          widths: \"2\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            primary: true,\n            type: \"submit\",\n            onClick: () => this.runQuery(this.state.queryMethod),\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), \"Execute Query\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderFilters() {\n    const active = this.state.accordionActive ? \"active\" : \"\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui styled accordion\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `title ${active}`,\n        onClick: e => {\n          e.stopPropagation();\n          this.setState({\n            accordionActive: !this.state.accordionActive\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \" dropdown icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), \"Show All Filters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `content ${active}`,\n        children: /*#__PURE__*/_jsxDEV(FilterForms, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 16,\n          children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: this.renderQueryWindow()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: /*#__PURE__*/_jsxDEV(Records, {\n              runQuery: this.runQuery\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    session: state.session,\n    index: state.index,\n    fields: state.indexFields,\n    filters: state.fieldValues,\n    queryString: state.queryString,\n    documents: state.documents\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDocuments,\n  setQueryString\n})(QueryPage);","map":{"version":3,"sources":["/Users/farzam/Projects/VU Coding/Living Hub/living-hub/src/components/QueryPage.js"],"names":["React","_","TextareaAutosize","connect","setDocuments","setQueryString","FilterForms","Grid","Input","Container","Divider","Segment","Button","Form","Icon","Records","QueryPage","Component","constructor","props","runQuery","session","postQuery","index","queryString","prepareFilters","then","res","data","results","catch","e","console","log","state","queryMethod","accordionActive","fields","Object","keys","setState","obj","dateFilter","range","entries","filters","map","filter","rangeIndicator","value","omit","renderQueryWindow","target","renderFilters","active","stopPropagation","render","mapStateToProps","indexFields","fieldValues","documents"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport _ from \"lodash\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { connect } from \"react-redux\";\nimport { setDocuments, setQueryString } from \"../actions\";\nimport FilterForms from \"./FilterForms\";\n\nimport {\n  Grid,\n  Input,\n  Container,\n  Divider,\n  Segment,\n  Button,\n  Form,\n  Icon,\n} from \"semantic-ui-react\";\nimport Records from \"./Records\";\n\nclass QueryPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      queryMethod: \"POST\",\n      accordionActive: false,\n    };\n    this.fields = Object.keys(this.props.fields);\n  }\n\n  prepareFilters() {\n    this.setState({\n      queryMethod: \"POST\",\n    });\n    const obj = {};\n    const dateFilter = {\n      range: {},\n    };\n    Object.entries(this.props.filters).map((filter) => {\n      if (filter[0] === \"date\") {\n        for (const [rangeIndicator, value] of Object.entries(filter[1])) {\n          if (value === null || value === \"\") {\n            console.log(\"here\");\n            dateFilter.range = _.omit(dateFilter.range, rangeIndicator);\n          } else dateFilter.range[rangeIndicator] = value;\n        }\n        obj[\"date\"] = dateFilter;\n      } else {\n        obj[filter[0]] = { value: filter[1] };\n      }\n      return obj;\n    });\n    return obj;\n  }\n\n  runQuery = () => {\n    this.props.session\n      .postQuery(\n        this.props.index,\n        this.props.queryString,\n        // this.fields,\n        \"\",\n        \"2m\",\n        50,\n        {},\n        { ...this.prepareFilters() }\n      )\n      .then((res) => {\n        this.props.setDocuments(res.data.results);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    return null;\n  };\n\n  renderQueryWindow() {\n    return (\n      <Grid columns={1}>\n        <Grid.Column>\n          <TextareaAutosize\n            width={16}\n            value={this.props.queryString ? this.props.queryString : \"\"}\n            minRows={1}\n            placeholder=\"Query...\"\n            onChange={(e) => this.props.setQueryString(e.target.value)}\n          />\n        </Grid.Column>\n        <Grid.Column>{this.renderFilters()}</Grid.Column>\n        <Form>\n          <Button.Group widths=\"2\">\n            <Button\n              primary\n              type=\"submit\"\n              onClick={() => this.runQuery(this.state.queryMethod)}\n            >\n              <Icon name=\"search\" />\n              Execute Query\n            </Button>\n          </Button.Group>\n        </Form>\n      </Grid>\n    );\n  }\n\n  renderFilters() {\n    const active = this.state.accordionActive ? \"active\" : \"\";\n\n    return (\n      <div className=\"ui styled accordion\">\n        <div\n          className={`title ${active}`}\n          onClick={(e) => {\n            e.stopPropagation();\n            this.setState({\n              accordionActive: !this.state.accordionActive,\n            });\n          }}\n        >\n          <i className=\" dropdown icon\"></i>\n          Show All Filters\n        </div>\n        <div className={`content ${active}`}>\n          <FilterForms />\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Container>\n        <Grid>\n          <Grid.Column width={16}>\n            <Grid.Row>{this.renderQueryWindow()}</Grid.Row>\n            <br />\n            <Grid.Row>\n              <Records runQuery={this.runQuery} />\n            </Grid.Row>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    session: state.session,\n    index: state.index,\n    fields: state.indexFields,\n    filters: state.fieldValues,\n    queryString: state.queryString,\n    documents: state.documents,\n  };\n};\n\nexport default connect(mapStateToProps, { setDocuments, setQueryString })(\n  QueryPage\n);\n"]},"metadata":{},"sourceType":"module"}