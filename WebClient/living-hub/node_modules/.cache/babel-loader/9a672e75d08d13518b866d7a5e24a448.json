{"ast":null,"code":"var _jsxFileName = \"/Users/farzam/Projects/VU Coding/Living Hub/living-hub/src/components/LoginPage.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport history from \"../history\";\nimport { createSession, deleteSession, selectIndex, setIndices } from \"../actions\";\nimport newElasticSession from \"../apis/Elastic\";\nimport { Button, Form, Grid, Header, Image, Message, Segment } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginColor = \"blue\";\nconst logoutColor = \"red\";\nconst idleColor = \"grey\"; // just delete this if you dont want default users\n\nconst defaultLoginCredentials = {\n  host: \"http://127.0.0.1:5000\",\n  email: \"admin\",\n  password: \"admin\"\n};\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitForm = async () => {\n      this.setState({\n        loginStatus: \"waiting\"\n      });\n      newElasticSession(this.state.host, this.state.email, this.state.password).then(ElasticSession => {\n        this.props.createSession(ElasticSession);\n        this.setState({\n          loginStatus: \"success\"\n        });\n        history.push(this.props.items[0].path);\n      }).catch(e => {\n        this.setState({\n          loginStatus: \"error\"\n        });\n      });\n      this.props.selectIndex(\"living_hub_dataset\");\n    };\n\n    this.state = {\n      host: defaultLoginCredentials.host ? defaultLoginCredentials.host : null,\n      email: defaultLoginCredentials.email ? defaultLoginCredentials.email : null,\n      password: defaultLoginCredentials.password ? defaultLoginCredentials.password : null,\n      loginStatus: \"idle\"\n    };\n  }\n\n  renderLoginForm() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      size: \"large\",\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        stacked: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          error: this.state.status === \"error\",\n          value: this.state.host,\n          onChange: (e, {\n            value\n          }) => {\n            this.setState({\n              loginStatus: \"idle\",\n              host: value\n            });\n          },\n          icon: \"home\",\n          iconPosition: \"left\",\n          placeholder: \"Host\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          error: this.state.status === \"error\",\n          value: this.state.email,\n          onChange: (e, {\n            value\n          }) => {\n            this.setState({\n              loginStatus: \"idle\",\n              email: value\n            });\n          },\n          icon: \"user\",\n          iconPosition: \"left\",\n          placeholder: \"Email adress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          error: this.state.status === \"error\",\n          value: this.state.password,\n          onChange: (e, {\n            value\n          }) => {\n            this.setState({\n              loginStatus: \"idle\",\n              password: value\n            });\n          },\n          icon: \"lock\",\n          iconPosition: \"left\",\n          placeholder: \"Password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.submitForm,\n          color: this.props.session === null ? loginColor : idleColor,\n          fluid: true,\n          size: \"large\",\n          children: \"Login!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            this.props.deleteSession();\n          },\n          color: this.props.session !== null ? logoutColor : idleColor,\n          fluid: true,\n          size: \"large\",\n          children: \"Logout!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      inverted: true,\n      textAlign: \"center\",\n      style: {\n        height: \"100vh\"\n      },\n      verticalAlign: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          color: loginColor,\n          textAlign: \"center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), this.renderLoginForm(), /*#__PURE__*/_jsxDEV(Message, {\n          children: \"Don't have an account? So Sad!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    session: state.session,\n    items: ownProps.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createSession,\n  deleteSession\n})(LoginPage);","map":{"version":3,"sources":["/Users/farzam/Projects/VU Coding/Living Hub/living-hub/src/components/LoginPage.js"],"names":["React","connect","history","createSession","deleteSession","selectIndex","setIndices","newElasticSession","Button","Form","Grid","Header","Image","Message","Segment","loginColor","logoutColor","idleColor","defaultLoginCredentials","host","email","password","LoginPage","Component","constructor","props","submitForm","setState","loginStatus","state","then","ElasticSession","push","items","path","catch","e","renderLoginForm","status","value","session","render","height","maxWidth","mapStateToProps","ownProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport history from \"../history\";\n\nimport {\n  createSession,\n  deleteSession,\n  selectIndex,\n  setIndices,\n} from \"../actions\";\nimport newElasticSession from \"../apis/Elastic\";\n\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\n\nconst loginColor = \"blue\";\nconst logoutColor = \"red\";\nconst idleColor = \"grey\";\n\n// just delete this if you dont want default users\nconst defaultLoginCredentials = {\n  host: \"http://127.0.0.1:5000\",\n  email: \"admin\",\n  password: \"admin\",\n};\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      host: defaultLoginCredentials.host ? defaultLoginCredentials.host : null,\n      email: defaultLoginCredentials.email\n        ? defaultLoginCredentials.email\n        : null,\n      password: defaultLoginCredentials.password\n        ? defaultLoginCredentials.password\n        : null,\n      loginStatus: \"idle\",\n    };\n  }\n\n  submitForm = async () => {\n    this.setState({\n      loginStatus: \"waiting\",\n    });\n\n    newElasticSession(this.state.host, this.state.email, this.state.password)\n      .then((ElasticSession) => {\n        this.props.createSession(ElasticSession);\n        this.setState({\n          loginStatus: \"success\",\n        });\n        history.push(this.props.items[0].path);\n      })\n      .catch((e) => {\n        this.setState({\n          loginStatus: \"error\",\n        });\n      });\n\n    this.props.selectIndex(\"living_hub_dataset\");\n  };\n\n  renderLoginForm() {\n    return (\n      <Form size=\"large\">\n        <Segment stacked>\n          <Form.Input\n            fluid\n            error={this.state.status === \"error\"}\n            value={this.state.host}\n            onChange={(e, { value }) => {\n              this.setState({\n                loginStatus: \"idle\",\n                host: value,\n              });\n            }}\n            icon=\"home\"\n            iconPosition=\"left\"\n            placeholder=\"Host\"\n          />\n\n          <Form.Input\n            fluid\n            error={this.state.status === \"error\"}\n            value={this.state.email}\n            onChange={(e, { value }) => {\n              this.setState({\n                loginStatus: \"idle\",\n                email: value,\n              });\n            }}\n            icon=\"user\"\n            iconPosition=\"left\"\n            placeholder=\"Email adress\"\n          />\n\n          <Form.Input\n            fluid\n            error={this.state.status === \"error\"}\n            value={this.state.password}\n            onChange={(e, { value }) => {\n              this.setState({\n                loginStatus: \"idle\",\n                password: value,\n              });\n            }}\n            icon=\"lock\"\n            iconPosition=\"left\"\n            placeholder=\"Password\"\n            type=\"password\"\n          />\n\n          <Button\n            onClick={this.submitForm}\n            color={this.props.session === null ? loginColor : idleColor}\n            fluid\n            size=\"large\"\n          >\n            Login!\n          </Button>\n\n          <Button\n            onClick={() => {\n              this.props.deleteSession();\n            }}\n            color={this.props.session !== null ? logoutColor : idleColor}\n            fluid\n            size=\"large\"\n          >\n            Logout!\n          </Button>\n        </Segment>\n      </Form>\n    );\n  }\n\n  render() {\n    return (\n      <Grid\n        inverted\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color={loginColor} textAlign=\"center\">\n            {/* <Image src=\"/amcat-logo.svg\" /> Connect to Server */}\n          </Header>\n          {this.renderLoginForm()}\n          <Message>Don't have an account? So Sad!</Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    session: state.session,\n    items: ownProps.items,\n  };\n};\n\nexport default connect(mapStateToProps, { createSession, deleteSession })(\n  LoginPage\n);\n"]},"metadata":{},"sourceType":"module"}