{"version":3,"file":"format-string-by-pattern.es5.js","sources":["../src/index.ts"],"sourcesContent":["function shouldAppendLastSeparator(current: string, pattern: string, lastSeparator: string) {\n  return current.length + 1 === pattern.length && pattern.endsWith(lastSeparator);\n}\n\nfunction getFormattedString(pattern: string, value?: string | number) {\n  if (!value) {\n    return value;\n  }\n\n  const cleanValue = String(value).replace(/[^\\da-zA-Z\\n|]/g, '');\n  const blockSizes = pattern\n    .split(/[^\\da-zA-Z\\n|]/g)\n    .filter(Boolean)\n    .map(b => b.length);\n  const separators = pattern.split(/[\\da-zA-Z\\n|]/g).filter(Boolean);\n  const [firstSeparator] = separators;\n  const lastSeparator = separators[separators.length - 1];\n\n  if (pattern.startsWith(firstSeparator)) {\n    const afterReduce = separators.reduce(\n      (acc, cur, index) => {\n        const curBlockSize = blockSizes[index];\n        const beforeSlice = acc.value.slice(0, curBlockSize);\n        const afterSlice = acc.value.slice(curBlockSize);\n        const nextResult = beforeSlice ? acc.result.concat(cur, beforeSlice) : acc.result;\n\n        return {\n          result: nextResult,\n          value: afterSlice,\n        };\n      },\n      {\n        result: '',\n        value: cleanValue,\n      }\n    );\n\n    const res = afterReduce.result.slice(0, pattern.length);\n\n    if (shouldAppendLastSeparator(res, pattern, lastSeparator)) {\n      return res.concat(lastSeparator);\n    }\n\n    return res;\n  }\n\n  const afterReduce = blockSizes.reduce(\n    (acc, cur, index) => {\n      const curSeparator = separators[index] || '';\n      const replace = `$1${curSeparator}$2`;\n      const curSlice = cur + acc.prevSlice + acc.prevSeparator.length;\n      const curRegex = new RegExp(`(.{${curSlice}})(.)`);\n      const curValue = acc.value.replace(curRegex, replace);\n\n      return {\n        prevSeparator: curSeparator,\n        prevSlice: curSlice,\n        value: curValue,\n      };\n    },\n    {\n      prevSeparator: '',\n      prevSlice: 0,\n      value: cleanValue,\n    }\n  );\n\n  const res = afterReduce.value.slice(0, pattern.length);\n\n  if (shouldAppendLastSeparator(res, pattern, lastSeparator)) {\n    return res.concat(lastSeparator);\n  }\n\n  return res;\n}\n\nfunction formatStringByPattern(pattern: string): (value?: string | number) => string;\nfunction formatStringByPattern(pattern: string, value: string | number): string;\nfunction formatStringByPattern(pattern: string, value?: string | number) {\n  return value === undefined\n    ? (curriedValue: string | number) => getFormattedString(pattern, curriedValue)\n    : getFormattedString(pattern, value);\n}\n\nexport default formatStringByPattern;\n"],"names":["shouldAppendLastSeparator","current","pattern","lastSeparator","length","endsWith","getFormattedString","value","cleanValue","String","replace","blockSizes","split","filter","Boolean","map","b","separators","firstSeparator","startsWith","res_1","reduce","acc","cur","index","curBlockSize","beforeSlice","slice","afterSlice","result","concat","res","curSeparator","curSlice","prevSlice","prevSeparator","curRegex","RegExp","undefined","curriedValue"],"mappings":"AAAA,SAASA,EAA0BC,EAAiBC,EAAiBC,GACnE,OAAOF,EAAQG,OAAS,IAAMF,EAAQE,QAAUF,EAAQG,SAASF,GAGnE,SAASG,EAAmBJ,EAAiBK,GAC3C,IAAKA,EACH,OAAOA,EAGT,IAAMC,EAAaC,OAAOF,GAAOG,QAAQ,kBAAmB,IACtDC,EAAaT,EAChBU,MAAM,mBACNC,OAAOC,SACPC,KAAI,SAAAC,GAAK,OAAAA,EAAEZ,UACRa,EAAaf,EAAQU,MAAM,kBAAkBC,OAAOC,SACnDI,EAAkBD,KACnBd,EAAgBc,EAAWA,EAAWb,OAAS,GAErD,GAAIF,EAAQiB,WAAWD,GAAiB,CACtC,IAkBME,EAlBcH,EAAWI,QAC7B,SAACC,EAAKC,EAAKC,GACT,IAAMC,EAAed,EAAWa,GAC1BE,EAAcJ,EAAIf,MAAMoB,MAAM,EAAGF,GACjCG,EAAaN,EAAIf,MAAMoB,MAAMF,GAGnC,MAAO,CACLI,OAHiBH,EAAcJ,EAAIO,OAAOC,OAAOP,EAAKG,GAAeJ,EAAIO,OAIzEtB,MAAOqB,KAGX,CACEC,OAAQ,GACRtB,MAAOC,IAIaqB,OAAOF,MAAM,EAAGzB,EAAQE,QAEhD,OAAIJ,EAA0BoB,EAAKlB,EAASC,GACnCiB,EAAIU,OAAO3B,GAGbiB,EAGT,IAqBMW,EArBcpB,EAAWU,QAC7B,SAACC,EAAKC,EAAKC,GACT,IAAMQ,EAAef,EAAWO,IAAU,GACpCd,EAAU,KAAKsB,OACfC,EAAWV,EAAMD,EAAIY,UAAYZ,EAAIa,cAAc/B,OACnDgC,EAAW,IAAIC,OAAO,MAAMJ,WAGlC,MAAO,CACLE,cAAeH,EACfE,UAAWD,EACX1B,MALee,EAAIf,MAAMG,QAAQ0B,EAAU1B,MAQ/C,CACEyB,cAAe,GACfD,UAAW,EACX3B,MAAOC,IAIaD,MAAMoB,MAAM,EAAGzB,EAAQE,QAE/C,OAAIJ,EAA0B+B,EAAK7B,EAASC,GACnC4B,EAAID,OAAO3B,GAGb4B,iBAKT,SAA+B7B,EAAiBK,GAC9C,YAAiB+B,IAAV/B,EACH,SAACgC,GAAkC,OAAAjC,EAAmBJ,EAASqC,IAC/DjC,EAAmBJ,EAASK"}